Y86 Processor: pipe-full.hcl
285 bytes of code read
tty mode Using Cache

Cycle 0. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x0
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x0, imem_instr = irmovl, f_instr = irmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 1. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x6
D: instr = irmovl, rA = ----, rB = %eax, valC = 0x200, valP = 0x6, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x6, imem_instr = irmovl, f_instr = irmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 2. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xc
D: instr = irmovl, rA = ----, rB = %edx, valC = 0x1, valP = 0xc, Stat = AOK
E: instr = irmovl, valC = 0x200, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %eax, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xc, imem_instr = nop, f_instr = nop
	Execute: ALU: + 0x200 0x0 --> 0x200

Cycle 3. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xd
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0xd, Stat = AOK
E: instr = irmovl, valC = 0x1, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %edx, dstM = ----, Stat = AOK
M: instr = irmovl, Cnd = 1, valE = 0x200, valA = 0x0
   dstE = %eax, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xd, imem_instr = nop, f_instr = nop
	Execute: ALU: + 0x1 0x0 --> 0x1

Cycle 4. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xe
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0xe, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = irmovl, Cnd = 1, valE = 0x1, valA = 0x0
   dstE = %edx, dstM = ----, Stat = AOK
W: instr = irmovl, valE = 0x200, valM = 0x0, dstE = %eax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xe, imem_instr = jmp, f_instr = jmp
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x200 to register %eax

Cycle 5. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x34
D: instr = jmp, rA = ----, rB = ----, valC = 0x34, valP = 0x13, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = irmovl, valE = 0x1, valM = 0x0, dstE = %edx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x34, imem_instr = rmswap, f_instr = rmswap
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x1 to register %edx

Cycle 6. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x3a
D: instr = rmswap, rA = %edx, rB = %eax, valC = 0x0, valP = 0x3a, Stat = AOK
E: instr = jmp, valC = 0x34, valA = 0x13, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x3a, imem_instr = andl, f_instr = andl
	Execute: instr = jmp, cc = Z=1 S=0 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 7. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x3c
D: instr = andl, rA = %edx, rB = %edx, valC = 0x0, valP = 0x3c, Stat = AOK
E: instr = rmswap, valC = 0x0, valA = 0x1, valB = 0x200
   srcA = %edx, srcB = %eax, dstE = ----, dstM = %edx, Stat = AOK
M: instr = jmp, Cnd = 1, valE = 0x0, valA = 0x13
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x3c, imem_instr = jne, f_instr = jne
	Execute: ALU: + 0x0 0x200 --> 0x200

Cycle 8. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x3c
D: instr = andl, rA = %edx, rB = %edx, valC = 0x0, valP = 0x3c, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = rmswap, Cnd = 1, valE = 0x200, valA = 0x1
   dstE = ----, dstM = %edx, Stat = AOK
W: instr = jmp, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x3c, imem_instr = jne, f_instr = jne
	Memory: Read 0x0 from 0x200
	Execute: ALU: + 0x0 0x0 --> 0x0
	Wrote 0x1 to address 0x200

Cycle 9. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xcc
D: instr = jne, rA = ----, rB = ----, valC = 0xcc, valP = 0x41, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = %edx, srcB = %edx, dstE = %edx, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = rmswap, valE = 0x200, valM = 0x0, dstE = ----, dstM = %edx, Stat = AOK
	Fetch: f_pc = 0xcc, imem_instr = irmovl, f_instr = irmovl
	Execute: ALU: & 0x0 0x0 --> 0x0
	Execute: New cc = Z=1 S=0 O=0
	Writeback: Wrote 0x0 to register %edx

Cycle 10. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xd2
D: instr = irmovl, rA = ----, rB = %esp, valC = 0xe00, valP = 0xd2, Stat = AOK
E: instr = jne, valC = 0xcc, valA = 0x41, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = %edx, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xd2, imem_instr = irmovl, f_instr = irmovl
	Execute: instr = jne, cc = Z=1 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 11. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xd8
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jne, Cnd = 0, valE = 0x0, valA = 0x41
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x0, valM = 0x0, dstE = %edx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x41, imem_instr = irmovl, f_instr = irmovl
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x0 to register %edx

Cycle 12. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x47
D: instr = irmovl, rA = ----, rB = %esp, valC = 0xf00, valP = 0x47, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jne, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x47, imem_instr = irmovl, f_instr = irmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 13. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x4d
D: instr = irmovl, rA = ----, rB = %ebp, valC = 0xf00, valP = 0x4d, Stat = AOK
E: instr = irmovl, valC = 0xf00, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %esp, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x4d, imem_instr = irmovl, f_instr = irmovl
	Execute: ALU: + 0xf00 0x0 --> 0xf00

Cycle 14. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x53
D: instr = irmovl, rA = ----, rB = %ebx, valC = 0x10, valP = 0x53, Stat = AOK
E: instr = irmovl, valC = 0xf00, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %ebp, dstM = ----, Stat = AOK
M: instr = irmovl, Cnd = 1, valE = 0xf00, valA = 0x0
   dstE = %esp, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x53, imem_instr = irmovl, f_instr = irmovl
	Execute: ALU: + 0xf00 0x0 --> 0xf00

Cycle 15. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x59
D: instr = irmovl, rA = ----, rB = %ecx, valC = 0x210, valP = 0x59, Stat = AOK
E: instr = irmovl, valC = 0x10, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %ebx, dstM = ----, Stat = AOK
M: instr = irmovl, Cnd = 1, valE = 0xf00, valA = 0x0
   dstE = %ebp, dstM = ----, Stat = AOK
W: instr = irmovl, valE = 0xf00, valM = 0x0, dstE = %esp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x59, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x10 0x0 --> 0x10
	Writeback: Wrote 0xf00 to register %esp

Cycle 16. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x5f
D: instr = rmmovl, rA = %ebx, rB = %ecx, valC = 0x0, valP = 0x5f, Stat = AOK
E: instr = irmovl, valC = 0x210, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %ecx, dstM = ----, Stat = AOK
M: instr = irmovl, Cnd = 1, valE = 0x10, valA = 0x0
   dstE = %ebx, dstM = ----, Stat = AOK
W: instr = irmovl, valE = 0xf00, valM = 0x0, dstE = %ebp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x5f, imem_instr = irmovl, f_instr = irmovl
	Execute: ALU: + 0x210 0x0 --> 0x210
	Writeback: Wrote 0xf00 to register %ebp

Cycle 17. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x65
D: instr = irmovl, rA = ----, rB = %ecx, valC = 0x14, valP = 0x65, Stat = AOK
E: instr = rmmovl, valC = 0x0, valA = 0x10, valB = 0x210
   srcA = %ebx, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = irmovl, Cnd = 1, valE = 0x210, valA = 0x0
   dstE = %ecx, dstM = ----, Stat = AOK
W: instr = irmovl, valE = 0x10, valM = 0x0, dstE = %ebx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x65, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x0 0x210 --> 0x210
	Writeback: Wrote 0x10 to register %ebx

Cycle 18. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x6b
D: instr = mrmovl, rA = %ebx, rB = %ecx, valC = 0x0, valP = 0x6b, Stat = AOK
E: instr = irmovl, valC = 0x14, valA = 0x210, valB = 0x210
   srcA = ----, srcB = ----, dstE = %ecx, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x210, valA = 0x10
   dstE = ----, dstM = ----, Stat = AOK
W: instr = irmovl, valE = 0x210, valM = 0x0, dstE = %ecx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x6b, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x14 0x0 --> 0x14
	Writeback: Wrote 0x210 to register %ecx
	Wrote 0x10 to address 0x210

Cycle 19. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x71
D: instr = rmmovl, rA = %ebx, rB = %ebp, valC = 0x0, valP = 0x71, Stat = AOK
E: instr = mrmovl, valC = 0x0, valA = 0x0, valB = 0x14
   srcA = ----, srcB = %ecx, dstE = ----, dstM = %ebx, Stat = AOK
M: instr = irmovl, Cnd = 1, valE = 0x14, valA = 0x210
   dstE = %ecx, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x210, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x71, imem_instr = nop, f_instr = nop
	Execute: ALU: + 0x0 0x14 --> 0x14

Cycle 20. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x71
D: instr = rmmovl, rA = %ebx, rB = %ebp, valC = 0x0, valP = 0x71, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = mrmovl, Cnd = 1, valE = 0x14, valA = 0x0
   dstE = ----, dstM = %ebx, Stat = AOK
W: instr = irmovl, valE = 0x14, valM = 0x0, dstE = %ecx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x71, imem_instr = nop, f_instr = nop
	Memory: Read 0xa000 from 0x14
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x14 to register %ecx

Cycle 21. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x72
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x72, Stat = AOK
E: instr = rmmovl, valC = 0x0, valA = 0xa000, valB = 0xf00
   srcA = %ebx, srcB = %ebp, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = mrmovl, valE = 0x14, valM = 0xa000, dstE = ----, dstM = %ebx, Stat = AOK
	Fetch: f_pc = 0x72, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x0 0xf00 --> 0xf00
	Writeback: Wrote 0xa000 to register %ebx

Cycle 22. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x78
D: instr = mrmovl, rA = %ebx, rB = %ecx, valC = 0x4, valP = 0x78, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0xf00, valB = 0xf00
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0xf00, valA = 0xa000
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x78, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x0 0x0 --> 0x0
	Wrote 0xa000 to address 0xf00

Cycle 23. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x7e
D: instr = rmmovl, rA = %ebx, rB = %ebp, valC = 0xfffffffc, valP = 0x7e, Stat = AOK
E: instr = mrmovl, valC = 0x4, valA = 0x0, valB = 0x14
   srcA = ----, srcB = %ecx, dstE = ----, dstM = %ebx, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0xf00
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0xf00, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x7e, imem_instr = nop, f_instr = nop
	Execute: ALU: + 0x4 0x14 --> 0x18

Cycle 24. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x7e
D: instr = rmmovl, rA = %ebx, rB = %ebp, valC = 0xfffffffc, valP = 0x7e, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = mrmovl, Cnd = 1, valE = 0x18, valA = 0x0
   dstE = ----, dstM = %ebx, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x7e, imem_instr = nop, f_instr = nop
	Memory: Read 0xb00 from 0x18
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 25. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x7f
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x7f, Stat = AOK
E: instr = rmmovl, valC = 0xfffffffc, valA = 0xb00, valB = 0xf00
   srcA = %ebx, srcB = %ebp, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = mrmovl, valE = 0x18, valM = 0xb00, dstE = ----, dstM = %ebx, Stat = AOK
	Fetch: f_pc = 0x7f, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0xfffffffc 0xf00 --> 0xefc
	Writeback: Wrote 0xb00 to register %ebx

Cycle 26. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x85
D: instr = mrmovl, rA = %ebx, rB = %ecx, valC = 0x8, valP = 0x85, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0xefc, valB = 0xefc
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0xefc, valA = 0xb00
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x85, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x0 0x0 --> 0x0
	Wrote 0xb00 to address 0xefc

Cycle 27. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x8b
D: instr = rmmovl, rA = %ebx, rB = %ebp, valC = 0xfffffff8, valP = 0x8b, Stat = AOK
E: instr = mrmovl, valC = 0x8, valA = 0x0, valB = 0x14
   srcA = ----, srcB = %ecx, dstE = ----, dstM = %ebx, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0xefc
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0xefc, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x8b, imem_instr = nop, f_instr = nop
	Execute: ALU: + 0x8 0x14 --> 0x1c

Cycle 28. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x8b
D: instr = rmmovl, rA = %ebx, rB = %ebp, valC = 0xfffffff8, valP = 0x8b, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = mrmovl, Cnd = 1, valE = 0x1c, valA = 0x0
   dstE = ----, dstM = %ebx, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x8b, imem_instr = nop, f_instr = nop
	Memory: Read 0xc0 from 0x1c
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 29. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x8c
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x8c, Stat = AOK
E: instr = rmmovl, valC = 0xfffffff8, valA = 0xc0, valB = 0xf00
   srcA = %ebx, srcB = %ebp, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = mrmovl, valE = 0x1c, valM = 0xc0, dstE = ----, dstM = %ebx, Stat = AOK
	Fetch: f_pc = 0x8c, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0xfffffff8 0xf00 --> 0xef8
	Writeback: Wrote 0xc0 to register %ebx

Cycle 30. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x92
D: instr = mrmovl, rA = %ebx, rB = %ecx, valC = 0xc, valP = 0x92, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0xef8, valB = 0xef8
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0xef8, valA = 0xc0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x92, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x0 0x0 --> 0x0
	Couldn't write to address 0xef8

Cycle 31. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x98
D: instr = rmmovl, rA = %ebx, rB = %ebp, valC = 0xfffffff4, valP = 0x98, Stat = AOK
E: instr = mrmovl, valC = 0xc, valA = 0x0, valB = 0x14
   srcA = ----, srcB = %ecx, dstE = ----, dstM = %ebx, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0xef8
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0xef8, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x98, imem_instr = xorl, f_instr = xorl
	Execute: ALU: + 0xc 0x14 --> 0x20

Cycle 32. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x98
D: instr = rmmovl, rA = %ebx, rB = %ebp, valC = 0xfffffff4, valP = 0x98, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = mrmovl, Cnd = 1, valE = 0x20, valA = 0x0
   dstE = ----, dstM = %ebx, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x98, imem_instr = xorl, f_instr = xorl
	Memory: Read 0xd from 0x20
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 33. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x9a
D: instr = xorl, rA = %edx, rB = %edx, valC = 0x0, valP = 0x9a, Stat = AOK
E: instr = rmmovl, valC = 0xfffffff4, valA = 0xd, valB = 0xf00
   srcA = %ebx, srcB = %ebp, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = mrmovl, valE = 0x20, valM = 0xd, dstE = ----, dstM = %ebx, Stat = AOK
	Fetch: f_pc = 0x9a, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0xfffffff4 0xf00 --> 0xef4
	Writeback: Wrote 0xd to register %ebx

Cycle 34. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xa0
D: instr = rmmovl, rA = %edx, rB = %eax, valC = 0x0, valP = 0xa0, Stat = AOK
E: instr = xorl, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = %edx, srcB = %edx, dstE = %edx, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0xef4, valA = 0xd
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xa0, imem_instr = xorl, f_instr = xorl
	Execute: ALU: ^ 0x0 0x0 --> 0x0
	Execute: New cc = Z=1 S=0 O=0
	Couldn't write to address 0xef4

Cycle 35. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xa2
D: instr = xorl, rA = %eax, rB = %eax, valC = 0x0, valP = 0xa2, Stat = AOK
E: instr = rmmovl, valC = 0x0, valA = 0x0, valB = 0x200
   srcA = %edx, srcB = %eax, dstE = ----, dstM = ----, Stat = AOK
M: instr = xorl, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = %edx, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0xef4, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xa2, imem_instr = irmovl, f_instr = irmovl
	Execute: ALU: + 0x0 0x200 --> 0x200

Cycle 36. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xa8
D: instr = irmovl, rA = ----, rB = %ecx, valC = 0x210, valP = 0xa8, Stat = AOK
E: instr = xorl, valC = 0x0, valA = 0x200, valB = 0x200
   srcA = %eax, srcB = %eax, dstE = %eax, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x200, valA = 0x0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = xorl, valE = 0x0, valM = 0x0, dstE = %edx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xa8, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: ^ 0x200 0x200 --> 0x0
	Execute: New cc = Z=1 S=0 O=0
	Writeback: Wrote 0x0 to register %edx
	Wrote 0x0 to address 0x200

Cycle 37. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xae
D: instr = rmmovl, rA = %eax, rB = %ecx, valC = 0x0, valP = 0xae, Stat = AOK
E: instr = irmovl, valC = 0x210, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %ecx, dstM = ----, Stat = AOK
M: instr = xorl, Cnd = 1, valE = 0x0, valA = 0x200
   dstE = %eax, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x200, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xae, imem_instr = nop, f_instr = nop
	Execute: ALU: + 0x210 0x0 --> 0x210

Cycle 38. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xaf
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0xaf, Stat = AOK
E: instr = rmmovl, valC = 0x0, valA = 0x0, valB = 0x210
   srcA = %eax, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = irmovl, Cnd = 1, valE = 0x210, valA = 0x0
   dstE = %ecx, dstM = ----, Stat = AOK
W: instr = xorl, valE = 0x0, valM = 0x0, dstE = %eax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xaf, imem_instr = nop, f_instr = nop
	Execute: ALU: + 0x0 0x210 --> 0x210
	Writeback: Wrote 0x0 to register %eax

Cycle 39. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xb0
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0xb0, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x210, valB = 0x210
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x210, valA = 0x0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = irmovl, valE = 0x210, valM = 0x0, dstE = %ecx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xb0, imem_instr = nop, f_instr = nop
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x210 to register %ecx
	Wrote 0x0 to address 0x210

Cycle 40. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xb1
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0xb1, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x210
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x210, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xb1, imem_instr = nop, f_instr = nop
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 41. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xb2
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0xb2, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xb2, imem_instr = nop, f_instr = nop
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 42. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xb3
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0xb3, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xb3, imem_instr = nop, f_instr = nop
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 43. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xb4
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0xb4, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xb4, imem_instr = irmovl, f_instr = irmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 44. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xba
D: instr = irmovl, rA = ----, rB = %edx, valC = 0x220, valP = 0xba, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xba, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 45. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xc0
D: instr = mrmovl, rA = %ebx, rB = %edx, valC = 0x0, valP = 0xc0, Stat = AOK
E: instr = irmovl, valC = 0x220, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %edx, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xc0, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x220 0x0 --> 0x220

Cycle 46. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xc2
D: instr = andl, rA = %ebx, rB = %ebx, valC = 0x0, valP = 0xc2, Stat = AOK
E: instr = mrmovl, valC = 0x0, valA = 0x0, valB = 0x220
   srcA = ----, srcB = %edx, dstE = ----, dstM = %ebx, Stat = AOK
M: instr = irmovl, Cnd = 1, valE = 0x220, valA = 0x0
   dstE = %edx, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xc2, imem_instr = jne, f_instr = jne
	Execute: ALU: + 0x0 0x220 --> 0x220

Cycle 47. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xc2
D: instr = andl, rA = %ebx, rB = %ebx, valC = 0x0, valP = 0xc2, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = mrmovl, Cnd = 1, valE = 0x220, valA = 0x0
   dstE = ----, dstM = %ebx, Stat = AOK
W: instr = irmovl, valE = 0x220, valM = 0x0, dstE = %edx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xc2, imem_instr = jne, f_instr = jne
	Memory: Read 0x20 from 0x220
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x220 to register %edx

Cycle 48. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xba
D: instr = jne, rA = ----, rB = ----, valC = 0xba, valP = 0xc7, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x20, valB = 0x20
   srcA = %ebx, srcB = %ebx, dstE = %ebx, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = mrmovl, valE = 0x220, valM = 0x20, dstE = ----, dstM = %ebx, Stat = AOK
	Fetch: f_pc = 0xba, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: & 0x20 0x20 --> 0x20
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x20 to register %ebx

Cycle 49. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xc0
D: instr = mrmovl, rA = %ebx, rB = %edx, valC = 0x0, valP = 0xc0, Stat = AOK
E: instr = jne, valC = 0xba, valA = 0xc7, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x20, valA = 0x20
   dstE = %ebx, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xc0, imem_instr = andl, f_instr = andl
	Execute: instr = jne, cc = Z=0 S=0 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 50. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xc2
D: instr = andl, rA = %ebx, rB = %ebx, valC = 0x0, valP = 0xc2, Stat = AOK
E: instr = mrmovl, valC = 0x0, valA = 0x0, valB = 0x220
   srcA = ----, srcB = %edx, dstE = ----, dstM = %ebx, Stat = AOK
M: instr = jne, Cnd = 1, valE = 0x0, valA = 0xc7
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x20, valM = 0x0, dstE = %ebx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xc2, imem_instr = jne, f_instr = jne
	Execute: ALU: + 0x0 0x220 --> 0x220
	Writeback: Wrote 0x20 to register %ebx

Cycle 51. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xc2
D: instr = andl, rA = %ebx, rB = %ebx, valC = 0x0, valP = 0xc2, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = mrmovl, Cnd = 1, valE = 0x220, valA = 0x0
   dstE = ----, dstM = %ebx, Stat = AOK
W: instr = jne, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xc2, imem_instr = jne, f_instr = jne
	Memory: Read 0x20 from 0x220
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 52. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xba
D: instr = jne, rA = ----, rB = ----, valC = 0xba, valP = 0xc7, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x20, valB = 0x20
   srcA = %ebx, srcB = %ebx, dstE = %ebx, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = mrmovl, valE = 0x220, valM = 0x20, dstE = ----, dstM = %ebx, Stat = AOK
	Fetch: f_pc = 0xba, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: & 0x20 0x20 --> 0x20
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x20 to register %ebx

Cycle 53. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xc0
D: instr = mrmovl, rA = %ebx, rB = %edx, valC = 0x0, valP = 0xc0, Stat = AOK
E: instr = jne, valC = 0xba, valA = 0xc7, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x20, valA = 0x20
   dstE = %ebx, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xc0, imem_instr = andl, f_instr = andl
	Execute: instr = jne, cc = Z=0 S=0 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 54. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xc2
D: instr = andl, rA = %ebx, rB = %ebx, valC = 0x0, valP = 0xc2, Stat = AOK
E: instr = mrmovl, valC = 0x0, valA = 0x0, valB = 0x220
   srcA = ----, srcB = %edx, dstE = ----, dstM = %ebx, Stat = AOK
M: instr = jne, Cnd = 1, valE = 0x0, valA = 0xc7
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x20, valM = 0x0, dstE = %ebx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xc2, imem_instr = jne, f_instr = jne
	Execute: ALU: + 0x0 0x220 --> 0x220
	Writeback: Wrote 0x20 to register %ebx

Cycle 55. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xc2
D: instr = andl, rA = %ebx, rB = %ebx, valC = 0x0, valP = 0xc2, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = mrmovl, Cnd = 1, valE = 0x220, valA = 0x0
   dstE = ----, dstM = %ebx, Stat = AOK
W: instr = jne, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xc2, imem_instr = jne, f_instr = jne
	Memory: Read 0x0 from 0x220
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 56. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xba
D: instr = jne, rA = ----, rB = ----, valC = 0xba, valP = 0xc7, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = %ebx, srcB = %ebx, dstE = %ebx, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = mrmovl, valE = 0x220, valM = 0x0, dstE = ----, dstM = %ebx, Stat = AOK
	Fetch: f_pc = 0xba, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: & 0x0 0x0 --> 0x0
	Execute: New cc = Z=1 S=0 O=0
	Writeback: Wrote 0x0 to register %ebx

Cycle 57. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xc0
D: instr = mrmovl, rA = %ebx, rB = %edx, valC = 0x0, valP = 0xc0, Stat = AOK
E: instr = jne, valC = 0xba, valA = 0xc7, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = %ebx, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xc0, imem_instr = andl, f_instr = andl
	Execute: instr = jne, cc = Z=1 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 58. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xc2
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jne, Cnd = 0, valE = 0x0, valA = 0xc7
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x0, valM = 0x0, dstE = %ebx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xc7, imem_instr = jmp, f_instr = jmp
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x0 to register %ebx

Cycle 59. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x11b
D: instr = jmp, rA = ----, rB = ----, valC = 0x11b, valP = 0xcc, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jne, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x11b, imem_instr = nop, f_instr = nop
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 60. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x11c
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x11c, Stat = AOK
E: instr = jmp, valC = 0x11b, valA = 0xcc, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x11c, imem_instr = nop, f_instr = nop
	Execute: instr = jmp, cc = Z=1 S=0 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 61. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x11d
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x11d, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = jmp, Cnd = 1, valE = 0x0, valA = 0xcc
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x11d, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 62. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x11e
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x11e, Stat = HLT
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = jmp, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x11e, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 63. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x11f
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x11f, Stat = HLT
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x11f, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 64. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x120
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x120, Stat = HLT
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = halt, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = HLT
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x120, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 65. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x121
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x121, Stat = HLT
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = halt, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = HLT
	Fetch: f_pc = 0x121, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0
66 instructions executed
Status = HLT
Condition Codes: Z=1 S=0 O=0
Changed Register State:
%ecx:	0x00000000	0x00000210
%edx:	0x00000000	0x00000220
%esp:	0x00000000	0x00000f00
%ebp:	0x00000000	0x00000f00
Changed Memory State:
0x0ef4:	0x00000000	0x0000000d
0x0ef8:	0x00000000	0x000000c0
0x0efc:	0x00000000	0x00000b00
0x0f00:	0x00000000	0x0000a000
CPI: 62 cycles/50 instructions = 1.24
