Y86 Processor: pipe-full.hcl
285 bytes of code read
tty mode Using Cache

Cycle 0. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x0
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x0, imem_instr = irmovl, f_instr = irmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 1. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x6
D: instr = irmovl, rA = ----, rB = %eax, valC = 0x200, valP = 0x6, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x6, imem_instr = irmovl, f_instr = irmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 2. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xc
D: instr = irmovl, rA = ----, rB = %edx, valC = 0x1, valP = 0xc, Stat = AOK
E: instr = irmovl, valC = 0x200, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %eax, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xc, imem_instr = nop, f_instr = nop
	Execute: ALU: + 0x200 0x0 --> 0x200

Cycle 3. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xd
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0xd, Stat = AOK
E: instr = irmovl, valC = 0x1, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %edx, dstM = ----, Stat = AOK
M: instr = irmovl, Cnd = 1, valE = 0x200, valA = 0x0
   dstE = %eax, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xd, imem_instr = nop, f_instr = nop
	Execute: ALU: + 0x1 0x0 --> 0x1

Cycle 4. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xe
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0xe, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = irmovl, Cnd = 1, valE = 0x1, valA = 0x0
   dstE = %edx, dstM = ----, Stat = AOK
W: instr = irmovl, valE = 0x200, valM = 0x0, dstE = %eax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xe, imem_instr = jmp, f_instr = jmp
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x200 to register %eax

Cycle 5. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x34
D: instr = jmp, rA = ----, rB = ----, valC = 0x34, valP = 0x13, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = irmovl, valE = 0x1, valM = 0x0, dstE = %edx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x34, imem_instr = rmswap, f_instr = rmswap
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x1 to register %edx

Cycle 6. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x3a
D: instr = rmswap, rA = %edx, rB = %eax, valC = 0x0, valP = 0x3a, Stat = AOK
E: instr = jmp, valC = 0x34, valA = 0x13, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x3a, imem_instr = andl, f_instr = andl
	Execute: instr = jmp, cc = Z=1 S=0 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 7. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x3c
D: instr = andl, rA = %edx, rB = %edx, valC = 0x0, valP = 0x3c, Stat = AOK
E: instr = rmswap, valC = 0x0, valA = 0x1, valB = 0x200
   srcA = %edx, srcB = %eax, dstE = ----, dstM = %edx, Stat = AOK
M: instr = jmp, Cnd = 1, valE = 0x0, valA = 0x13
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x3c, imem_instr = jne, f_instr = jne
	Execute: ALU: + 0x0 0x200 --> 0x200

Cycle 8. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x3c
D: instr = andl, rA = %edx, rB = %edx, valC = 0x0, valP = 0x3c, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = rmswap, Cnd = 1, valE = 0x200, valA = 0x1
   dstE = ----, dstM = %edx, Stat = AOK
W: instr = jmp, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x3c, imem_instr = jne, f_instr = jne
	Memory: Read 0x1 from 0x200
	Execute: ALU: + 0x0 0x0 --> 0x0
	Wrote 0x1 to address 0x200

Cycle 9. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xcc
D: instr = jne, rA = ----, rB = ----, valC = 0xcc, valP = 0x41, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x1, valB = 0x1
   srcA = %edx, srcB = %edx, dstE = %edx, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = rmswap, valE = 0x200, valM = 0x1, dstE = ----, dstM = %edx, Stat = AOK
	Fetch: f_pc = 0xcc, imem_instr = irmovl, f_instr = irmovl
	Execute: ALU: & 0x1 0x1 --> 0x1
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x1 to register %edx

Cycle 10. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xd2
D: instr = irmovl, rA = ----, rB = %esp, valC = 0xe00, valP = 0xd2, Stat = AOK
E: instr = jne, valC = 0xcc, valA = 0x41, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x1, valA = 0x1
   dstE = %edx, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xd2, imem_instr = irmovl, f_instr = irmovl
	Execute: instr = jne, cc = Z=0 S=0 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 11. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xd8
D: instr = irmovl, rA = ----, rB = %ebp, valC = 0xe00, valP = 0xd8, Stat = AOK
E: instr = irmovl, valC = 0xe00, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %esp, dstM = ----, Stat = AOK
M: instr = jne, Cnd = 1, valE = 0x0, valA = 0x41
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x1, valM = 0x0, dstE = %edx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xd8, imem_instr = irmovl, f_instr = irmovl
	Execute: ALU: + 0xe00 0x0 --> 0xe00
	Writeback: Wrote 0x1 to register %edx

Cycle 12. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xde
D: instr = irmovl, rA = ----, rB = %ecx, valC = 0x14, valP = 0xde, Stat = AOK
E: instr = irmovl, valC = 0xe00, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %ebp, dstM = ----, Stat = AOK
M: instr = irmovl, Cnd = 1, valE = 0xe00, valA = 0x0
   dstE = %esp, dstM = ----, Stat = AOK
W: instr = jne, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xde, imem_instr = nop, f_instr = nop
	Execute: ALU: + 0xe00 0x0 --> 0xe00

Cycle 13. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xdf
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0xdf, Stat = AOK
E: instr = irmovl, valC = 0x14, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %ecx, dstM = ----, Stat = AOK
M: instr = irmovl, Cnd = 1, valE = 0xe00, valA = 0x0
   dstE = %ebp, dstM = ----, Stat = AOK
W: instr = irmovl, valE = 0xe00, valM = 0x0, dstE = %esp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xdf, imem_instr = irmovl, f_instr = irmovl
	Execute: ALU: + 0x14 0x0 --> 0x14
	Writeback: Wrote 0xe00 to register %esp

Cycle 14. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xe5
D: instr = irmovl, rA = ----, rB = %ebx, valC = 0x20, valP = 0xe5, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = irmovl, Cnd = 1, valE = 0x14, valA = 0x0
   dstE = %ecx, dstM = ----, Stat = AOK
W: instr = irmovl, valE = 0xe00, valM = 0x0, dstE = %ebp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xe5, imem_instr = irmovl, f_instr = irmovl
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0xe00 to register %ebp

Cycle 15. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xeb
D: instr = irmovl, rA = ----, rB = %ecx, valC = 0x220, valP = 0xeb, Stat = AOK
E: instr = irmovl, valC = 0x20, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %ebx, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = irmovl, valE = 0x14, valM = 0x0, dstE = %ecx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xeb, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x20 0x0 --> 0x20
	Writeback: Wrote 0x14 to register %ecx

Cycle 16. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xf1
D: instr = rmmovl, rA = %ebx, rB = %ecx, valC = 0x0, valP = 0xf1, Stat = AOK
E: instr = irmovl, valC = 0x220, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %ecx, dstM = ----, Stat = AOK
M: instr = irmovl, Cnd = 1, valE = 0x20, valA = 0x0
   dstE = %ebx, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xf1, imem_instr = nop, f_instr = nop
	Execute: ALU: + 0x220 0x0 --> 0x220

Cycle 17. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xf2
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0xf2, Stat = AOK
E: instr = rmmovl, valC = 0x0, valA = 0x20, valB = 0x220
   srcA = %ebx, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = irmovl, Cnd = 1, valE = 0x220, valA = 0x0
   dstE = %ecx, dstM = ----, Stat = AOK
W: instr = irmovl, valE = 0x20, valM = 0x0, dstE = %ebx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xf2, imem_instr = nop, f_instr = nop
	Execute: ALU: + 0x0 0x220 --> 0x220
	Writeback: Wrote 0x20 to register %ebx

Cycle 18. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xf3
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0xf3, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x220, valB = 0x220
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x220, valA = 0x20
   dstE = ----, dstM = ----, Stat = AOK
W: instr = irmovl, valE = 0x220, valM = 0x0, dstE = %ecx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xf3, imem_instr = nop, f_instr = nop
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x220 to register %ecx
	Wrote 0x20 to address 0x220

Cycle 19. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xf4
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0xf4, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x220
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x220, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xf4, imem_instr = nop, f_instr = nop
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 20. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xf5
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0xf5, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xf5, imem_instr = irmovl, f_instr = irmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 21. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xfb
D: instr = irmovl, rA = ----, rB = %edx, valC = 0x210, valP = 0xfb, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xfb, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 22. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x101
D: instr = mrmovl, rA = %ebx, rB = %edx, valC = 0x0, valP = 0x101, Stat = AOK
E: instr = irmovl, valC = 0x210, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %edx, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x101, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x210 0x0 --> 0x210

Cycle 23. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x103
D: instr = andl, rA = %ebx, rB = %ebx, valC = 0x0, valP = 0x103, Stat = AOK
E: instr = mrmovl, valC = 0x0, valA = 0x0, valB = 0x210
   srcA = ----, srcB = %edx, dstE = ----, dstM = %ebx, Stat = AOK
M: instr = irmovl, Cnd = 1, valE = 0x210, valA = 0x0
   dstE = %edx, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x103, imem_instr = jne, f_instr = jne
	Execute: ALU: + 0x0 0x210 --> 0x210

Cycle 24. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x103
D: instr = andl, rA = %ebx, rB = %ebx, valC = 0x0, valP = 0x103, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = mrmovl, Cnd = 1, valE = 0x210, valA = 0x0
   dstE = ----, dstM = %ebx, Stat = AOK
W: instr = irmovl, valE = 0x210, valM = 0x0, dstE = %edx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x103, imem_instr = jne, f_instr = jne
	Memory: Read 0x10 from 0x210
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x210 to register %edx

Cycle 25. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xfb
D: instr = jne, rA = ----, rB = ----, valC = 0xfb, valP = 0x108, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x10, valB = 0x10
   srcA = %ebx, srcB = %ebx, dstE = %ebx, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = mrmovl, valE = 0x210, valM = 0x10, dstE = ----, dstM = %ebx, Stat = AOK
	Fetch: f_pc = 0xfb, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: & 0x10 0x10 --> 0x10
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x10 to register %ebx

Cycle 26. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x101
D: instr = mrmovl, rA = %ebx, rB = %edx, valC = 0x0, valP = 0x101, Stat = AOK
E: instr = jne, valC = 0xfb, valA = 0x108, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x10, valA = 0x10
   dstE = %ebx, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x101, imem_instr = andl, f_instr = andl
	Execute: instr = jne, cc = Z=0 S=0 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 27. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x103
D: instr = andl, rA = %ebx, rB = %ebx, valC = 0x0, valP = 0x103, Stat = AOK
E: instr = mrmovl, valC = 0x0, valA = 0x0, valB = 0x210
   srcA = ----, srcB = %edx, dstE = ----, dstM = %ebx, Stat = AOK
M: instr = jne, Cnd = 1, valE = 0x0, valA = 0x108
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x10, valM = 0x0, dstE = %ebx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x103, imem_instr = jne, f_instr = jne
	Execute: ALU: + 0x0 0x210 --> 0x210
	Writeback: Wrote 0x10 to register %ebx

Cycle 28. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x103
D: instr = andl, rA = %ebx, rB = %ebx, valC = 0x0, valP = 0x103, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = mrmovl, Cnd = 1, valE = 0x210, valA = 0x0
   dstE = ----, dstM = %ebx, Stat = AOK
W: instr = jne, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x103, imem_instr = jne, f_instr = jne
	Memory: Read 0x10 from 0x210
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 29. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xfb
D: instr = jne, rA = ----, rB = ----, valC = 0xfb, valP = 0x108, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x10, valB = 0x10
   srcA = %ebx, srcB = %ebx, dstE = %ebx, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = mrmovl, valE = 0x210, valM = 0x10, dstE = ----, dstM = %ebx, Stat = AOK
	Fetch: f_pc = 0xfb, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: & 0x10 0x10 --> 0x10
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x10 to register %ebx

Cycle 30. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x101
D: instr = mrmovl, rA = %ebx, rB = %edx, valC = 0x0, valP = 0x101, Stat = AOK
E: instr = jne, valC = 0xfb, valA = 0x108, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x10, valA = 0x10
   dstE = %ebx, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x101, imem_instr = andl, f_instr = andl
	Execute: instr = jne, cc = Z=0 S=0 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 31. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x103
D: instr = andl, rA = %ebx, rB = %ebx, valC = 0x0, valP = 0x103, Stat = AOK
E: instr = mrmovl, valC = 0x0, valA = 0x0, valB = 0x210
   srcA = ----, srcB = %edx, dstE = ----, dstM = %ebx, Stat = AOK
M: instr = jne, Cnd = 1, valE = 0x0, valA = 0x108
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x10, valM = 0x0, dstE = %ebx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x103, imem_instr = jne, f_instr = jne
	Execute: ALU: + 0x0 0x210 --> 0x210
	Writeback: Wrote 0x10 to register %ebx

Cycle 32. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x103
D: instr = andl, rA = %ebx, rB = %ebx, valC = 0x0, valP = 0x103, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = mrmovl, Cnd = 1, valE = 0x210, valA = 0x0
   dstE = ----, dstM = %ebx, Stat = AOK
W: instr = jne, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x103, imem_instr = jne, f_instr = jne
	Memory: Read 0x10 from 0x210
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 33. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xfb
D: instr = jne, rA = ----, rB = ----, valC = 0xfb, valP = 0x108, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x10, valB = 0x10
   srcA = %ebx, srcB = %ebx, dstE = %ebx, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = mrmovl, valE = 0x210, valM = 0x10, dstE = ----, dstM = %ebx, Stat = AOK
	Fetch: f_pc = 0xfb, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: & 0x10 0x10 --> 0x10
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x10 to register %ebx

Cycle 34. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x101
D: instr = mrmovl, rA = %ebx, rB = %edx, valC = 0x0, valP = 0x101, Stat = AOK
E: instr = jne, valC = 0xfb, valA = 0x108, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x10, valA = 0x10
   dstE = %ebx, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x101, imem_instr = andl, f_instr = andl
	Execute: instr = jne, cc = Z=0 S=0 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 35. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x103
D: instr = andl, rA = %ebx, rB = %ebx, valC = 0x0, valP = 0x103, Stat = AOK
E: instr = mrmovl, valC = 0x0, valA = 0x0, valB = 0x210
   srcA = ----, srcB = %edx, dstE = ----, dstM = %ebx, Stat = AOK
M: instr = jne, Cnd = 1, valE = 0x0, valA = 0x108
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x10, valM = 0x0, dstE = %ebx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x103, imem_instr = jne, f_instr = jne
	Execute: ALU: + 0x0 0x210 --> 0x210
	Writeback: Wrote 0x10 to register %ebx

Cycle 36. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x103
D: instr = andl, rA = %ebx, rB = %ebx, valC = 0x0, valP = 0x103, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = mrmovl, Cnd = 1, valE = 0x210, valA = 0x0
   dstE = ----, dstM = %ebx, Stat = AOK
W: instr = jne, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x103, imem_instr = jne, f_instr = jne
	Memory: Read 0x10 from 0x210
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 37. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xfb
D: instr = jne, rA = ----, rB = ----, valC = 0xfb, valP = 0x108, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x10, valB = 0x10
   srcA = %ebx, srcB = %ebx, dstE = %ebx, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = mrmovl, valE = 0x210, valM = 0x10, dstE = ----, dstM = %ebx, Stat = AOK
	Fetch: f_pc = 0xfb, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: & 0x10 0x10 --> 0x10
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x10 to register %ebx

Cycle 38. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x101
D: instr = mrmovl, rA = %ebx, rB = %edx, valC = 0x0, valP = 0x101, Stat = AOK
E: instr = jne, valC = 0xfb, valA = 0x108, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x10, valA = 0x10
   dstE = %ebx, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x101, imem_instr = andl, f_instr = andl
	Execute: instr = jne, cc = Z=0 S=0 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 39. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x103
D: instr = andl, rA = %ebx, rB = %ebx, valC = 0x0, valP = 0x103, Stat = AOK
E: instr = mrmovl, valC = 0x0, valA = 0x0, valB = 0x210
   srcA = ----, srcB = %edx, dstE = ----, dstM = %ebx, Stat = AOK
M: instr = jne, Cnd = 1, valE = 0x0, valA = 0x108
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x10, valM = 0x0, dstE = %ebx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x103, imem_instr = jne, f_instr = jne
	Execute: ALU: + 0x0 0x210 --> 0x210
	Writeback: Wrote 0x10 to register %ebx

Cycle 40. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x103
D: instr = andl, rA = %ebx, rB = %ebx, valC = 0x0, valP = 0x103, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = mrmovl, Cnd = 1, valE = 0x210, valA = 0x0
   dstE = ----, dstM = %ebx, Stat = AOK
W: instr = jne, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x103, imem_instr = jne, f_instr = jne
	Memory: Read 0x0 from 0x210
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 41. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xfb
D: instr = jne, rA = ----, rB = ----, valC = 0xfb, valP = 0x108, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = %ebx, srcB = %ebx, dstE = %ebx, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = mrmovl, valE = 0x210, valM = 0x0, dstE = ----, dstM = %ebx, Stat = AOK
	Fetch: f_pc = 0xfb, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: & 0x0 0x0 --> 0x0
	Execute: New cc = Z=1 S=0 O=0
	Writeback: Wrote 0x0 to register %ebx

Cycle 42. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x101
D: instr = mrmovl, rA = %ebx, rB = %edx, valC = 0x0, valP = 0x101, Stat = AOK
E: instr = jne, valC = 0xfb, valA = 0x108, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = %ebx, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x101, imem_instr = andl, f_instr = andl
	Execute: instr = jne, cc = Z=1 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 43. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x103
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jne, Cnd = 0, valE = 0x0, valA = 0x108
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x0, valM = 0x0, dstE = %ebx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x108, imem_instr = xorl, f_instr = xorl
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x0 to register %ebx

Cycle 44. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x10a
D: instr = xorl, rA = %eax, rB = %eax, valC = 0x0, valP = 0x10a, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jne, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x10a, imem_instr = irmovl, f_instr = irmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 45. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x110
D: instr = irmovl, rA = ----, rB = %ecx, valC = 0x220, valP = 0x110, Stat = AOK
E: instr = xorl, valC = 0x0, valA = 0x200, valB = 0x200
   srcA = %eax, srcB = %eax, dstE = %eax, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x110, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: ^ 0x200 0x200 --> 0x0
	Execute: New cc = Z=1 S=0 O=0

Cycle 46. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x116
D: instr = rmmovl, rA = %eax, rB = %ecx, valC = 0x0, valP = 0x116, Stat = AOK
E: instr = irmovl, valC = 0x220, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %ecx, dstM = ----, Stat = AOK
M: instr = xorl, Cnd = 1, valE = 0x0, valA = 0x200
   dstE = %eax, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x116, imem_instr = jmp, f_instr = jmp
	Execute: ALU: + 0x220 0x0 --> 0x220

Cycle 47. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x11b
D: instr = jmp, rA = ----, rB = ----, valC = 0x11b, valP = 0x11b, Stat = AOK
E: instr = rmmovl, valC = 0x0, valA = 0x0, valB = 0x220
   srcA = %eax, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = irmovl, Cnd = 1, valE = 0x220, valA = 0x0
   dstE = %ecx, dstM = ----, Stat = AOK
W: instr = xorl, valE = 0x0, valM = 0x0, dstE = %eax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x11b, imem_instr = nop, f_instr = nop
	Execute: ALU: + 0x0 0x220 --> 0x220
	Writeback: Wrote 0x0 to register %eax

Cycle 48. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x11c
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x11c, Stat = AOK
E: instr = jmp, valC = 0x11b, valA = 0x11b, valB = 0x220
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x220, valA = 0x0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = irmovl, valE = 0x220, valM = 0x0, dstE = %ecx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x11c, imem_instr = nop, f_instr = nop
	Execute: instr = jmp, cc = Z=1 S=0 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x220 to register %ecx
	Wrote 0x0 to address 0x220

Cycle 49. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x11d
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x11d, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = jmp, Cnd = 1, valE = 0x0, valA = 0x11b
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x220, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x11d, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 50. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x11e
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x11e, Stat = HLT
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = jmp, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x11e, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 51. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x11f
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x11f, Stat = HLT
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x11f, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 52. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x120
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x120, Stat = HLT
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = halt, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = HLT
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x120, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 53. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x121
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x121, Stat = HLT
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = halt, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = HLT
	Fetch: f_pc = 0x121, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0
54 instructions executed
Status = HLT
Condition Codes: Z=1 S=0 O=0
Changed Register State:
%ecx:	0x00000000	0x00000220
%edx:	0x00000000	0x00000210
%esp:	0x00000000	0x00000e00
%ebp:	0x00000000	0x00000e00
Changed Memory State:
0x0ef4:	0x00000000	0x0000000d
0x0ef8:	0x00000000	0x000000c0
0x0efc:	0x00000000	0x00000b00
0x0f00:	0x00000000	0x0000a000
CPI: 50 cycles/42 instructions = 1.19
